{"ast":null,"code":"export const validate = inputs => {\n  const regexEmail = /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i;\n  const regexPass = /^[0-9]*$/;\n  const errors = {};\n  if (inputs.username === '') {\n    errors.username = 'El usuario no puede estar vacío';\n  } else if (!regexEmail.test(inputs.username)) {\n    errors.username = 'Debe ser un correo electrónico válido';\n  }\n  if (inputs.username.length > 35) {\n    errors.username = 'No puede contener más de 35 caracteres';\n  }\n  if (!inputs.password) {\n    errors.password = 'La contraseña no puede estar vacía';\n  } else if (inputs.password.length < 6 && inputs.password.length > 10) {\n    errors.password = 'Longitud de la contraseña inválida';\n  } else if (inputs.password.search(regexPass)) {\n    errors.password = 'La contraseña debe contener al menos 1 numero';\n  }\n  if (Number(inputs.password.length) > 6) {\n    console.log(inputs.password.length);\n    console.log(6);\n  }\n  console.log(regexPass.test(inputs.password));\n  console.log(errors);\n  return errors;\n};","map":{"version":3,"names":["validate","inputs","regexEmail","regexPass","errors","username","test","length","password","search","Number","console","log"],"sources":["/home/chalo/Documentos/Henry/rick_and_morty/rick-and-morty/src/components/validation.js"],"sourcesContent":["export const validate = (inputs) =>{\n\n\n    \n    const regexEmail = /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i;\n    const regexPass = /^[0-9]*$/;\n    const errors = {};\n\n    if (inputs.username === '') {\n      errors.username = 'El usuario no puede estar vacío';\n    } else if (!regexEmail.test(inputs.username)) {\n        errors.username = 'Debe ser un correo electrónico válido';\n    }\n    if(inputs.username.length > 35){\n        errors.username = 'No puede contener más de 35 caracteres';\n    }\n    if (!inputs.password) {\n      errors.password = 'La contraseña no puede estar vacía';\n    } else if ((inputs.password.length < 6) && (inputs.password.length > 10)) {\n        errors.password = 'Longitud de la contraseña inválida';\n    } else if (inputs.password.search(regexPass)){\n        errors.password = 'La contraseña debe contener al menos 1 numero';\n    }\n\n\n    if (Number(inputs.password.length) > 6 ){\n        console.log(inputs.password.length)    \n        console.log(6)\n    }\n\n    \n    console.log(regexPass.test(inputs.password))\n    console.log(errors);\n    return errors;\n  }\n\n"],"mappings":"AAAA,OAAO,MAAMA,QAAQ,GAAIC,MAAM,IAAI;EAI/B,MAAMC,UAAU,GAAG,2CAA2C;EAC9D,MAAMC,SAAS,GAAG,UAAU;EAC5B,MAAMC,MAAM,GAAG,CAAC,CAAC;EAEjB,IAAIH,MAAM,CAACI,QAAQ,KAAK,EAAE,EAAE;IAC1BD,MAAM,CAACC,QAAQ,GAAG,iCAAiC;EACrD,CAAC,MAAM,IAAI,CAACH,UAAU,CAACI,IAAI,CAACL,MAAM,CAACI,QAAQ,CAAC,EAAE;IAC1CD,MAAM,CAACC,QAAQ,GAAG,uCAAuC;EAC7D;EACA,IAAGJ,MAAM,CAACI,QAAQ,CAACE,MAAM,GAAG,EAAE,EAAC;IAC3BH,MAAM,CAACC,QAAQ,GAAG,wCAAwC;EAC9D;EACA,IAAI,CAACJ,MAAM,CAACO,QAAQ,EAAE;IACpBJ,MAAM,CAACI,QAAQ,GAAG,oCAAoC;EACxD,CAAC,MAAM,IAAKP,MAAM,CAACO,QAAQ,CAACD,MAAM,GAAG,CAAC,IAAMN,MAAM,CAACO,QAAQ,CAACD,MAAM,GAAG,EAAG,EAAE;IACtEH,MAAM,CAACI,QAAQ,GAAG,oCAAoC;EAC1D,CAAC,MAAM,IAAIP,MAAM,CAACO,QAAQ,CAACC,MAAM,CAACN,SAAS,CAAC,EAAC;IACzCC,MAAM,CAACI,QAAQ,GAAG,+CAA+C;EACrE;EAGA,IAAIE,MAAM,CAACT,MAAM,CAACO,QAAQ,CAACD,MAAM,CAAC,GAAG,CAAC,EAAE;IACpCI,OAAO,CAACC,GAAG,CAACX,MAAM,CAACO,QAAQ,CAACD,MAAM,CAAC;IACnCI,OAAO,CAACC,GAAG,CAAC,CAAC,CAAC;EAClB;EAGAD,OAAO,CAACC,GAAG,CAACT,SAAS,CAACG,IAAI,CAACL,MAAM,CAACO,QAAQ,CAAC,CAAC;EAC5CG,OAAO,CAACC,GAAG,CAACR,MAAM,CAAC;EACnB,OAAOA,MAAM;AACf,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}